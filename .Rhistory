plot(iris$Sepal.Length, iris$Sepal.Width)
iris
a <- 1
a
a + 5
a + 5 <- b
a + 5 -> b
b
iris
data <- iris
ourdata <- iris
3 + 5 / 2
(3 + 5) / 2
a <- 2
a + 5
a + 5 <- b
b <- a + 5
b
class(iris)
help(head)
head(iris, n = 5)
c <- "string"
c
c + a
pl20 <- head(iris$Petal.Length, n = 20)
pl20
class(pl20)
## Packages
install.packages("tidyverse")
library("tidyverse")
## Example dataframe
iris
b
d
a + 5
b <- a + 5
b
pl20
mean(pl20)
## Plotting
hist(x = Sepal.Length,
y = Sepal.Width)
## Plotting
hist(x = iris$Sepal.Length,
y = iris$Sepal.Width)
## Plotting
plot(x = iris$Sepal.Length,
y = iris$Sepal.Width)
hist(iris$Sepal.Length)
help(hist)
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
col = "red")
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
col = "blue")
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
col = "green")
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
col = "grey")
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
col = "white")
## Example statistic
mean(pl20)
# add plot title, color bars red
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
col = "red")
# add plot title, color bars red
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
col = "blue")
# add plot title, color bars red
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
col = "lightblue")
help(head)
## Extracting / subsetting data
iris$Sepal.Width
# Add plot title, color bars light red
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
col = "lightred")
# Add plot title, color bars light red
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
col = "lightblue")
# Add plot title, color bars light red
hist(iris$Sepal.Length,
xlab = "Sepal Length",
ylab = "Frequency",
main = "",
col = "lightblue")
hist(iris$Sepal.Length)       # histogram
# Drop plot title, edit axis labels, color bars light blue
hist(iris$Sepal.Length,
main = "",
xlab = "Sepal Length",
ylab = "Frequency",
col = "lightblue")
mean(iris$Sepal.Width)
max(iris$Sepal.Width)
mean(iris$Sepal.Width)
sd(iris$Sepal.Width)
## Extracting data, basic stats
iris$Sepal.Width
max(iris$Sepal.Width)
## Simple plotting: scatterplot and histogram
plot(x = iris$Sepal.Width,
y = iris$Sepal.Length)
hist(iris$Sepal.Width)
hist(iris$Sepal.Width,
main = "",
xlab = "Sepal Length",
ylab = "Frequency",
col = "lightblue")
iris
pl20
head(iris)
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Width,
y = iris$Sepal.Length)
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Length,
y = iris$Sepal.Length)
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Length,
y = iris$Sepal.Width)
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
hist(iris$Sepal.Width,
main = "",
xlab = "Sepal Width",
ylab = "Frequency",
col = "lightblue")
hist(iris$Sepal.Width,
main = "",
xlab = "Sepal Width",
ylab = "Frequency",
col = "blue")
iris[1]
iris[,1]
iris[1,]
head(iris)
iris[1:5,]
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
model <- lm(iris, x ~ y)
help(lm)
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
model <- lm(iris$Sepal.Length ~ iris$Sepal.Wdith)
model <- lm(formula = iris$Sepal.Length ~ iris$Sepal.Wdith,
data = iris)
model <- lm(formula = Sepal.Length ~ Sepal.Wdith,
data = iris)
model <- lm(formula = Sepal.Length ~ Sepal.Width,
data = iris)
abline(model, col = "red")
model <- lm(formula = Sepal.Length ~ Petal.Length,
data = iris)
abline(model, col = "red")
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
model <- lm(formula = Sepal.Length ~ Petal.Length,
data = iris)
abline(model, col = "red")
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
model <- lm(formula = Petal.Length ~ Petal.Width,
data = iris)
abline(model, col = "red")
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
model <- lm(formula = Petal.Length ~ Petal.Width,
data = iris)
abline(model, col = "red")
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
model <- lm(formula = Petal.Length ~ Sepal.Length,
data = iris)
abline(model, col = "red")
## Simple plotting: scatter plot and histogram
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
reg <- lm(formula = Petal.Length ~ Sepal.Length,
data = iris)
abline(reg, col = "red")
hist(iris$Sepal.Width)
hist(iris$Sepal.Width,
main = "",
xlab = "Sepal Width",
ylab = "Frequency",
col = "blue")
## Simple plotting: histogram
hist(iris$Sepal.Width)
## Plotting scatter plot and add regression line
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
reg <- lm(formula = Petal.Length ~ Sepal.Length,
data = iris)
abline(reg, col = "red")
reg
view(iris)
??max
a + c
install.packages("caper")
help(pgls)
library(caper)
help(pgls)
data(shorebird)
shorebird
shorebird.data
shorebird.tree
class(shorebird.tree)
help(read.tree)
shorebird <- comparative.data(shorebird.tree, shorebird.data, Species, vcv=TRUE, vcv.dim=3)
shorebird
help(comparative.data)
mod1 <- pgls(log(Egg.Mass) ~ log(M.Mass) * log(F.Mass), shorebird, lambda='ML')
summary(mod1)
shorebird$data
help(caper)
library(help = ape)
library(help = caper)
mod1 <- pgls(log(Egg.Mass) ~ log(F.Mass), shorebird, lambda='ML')
summary(mod1)
par(mfrow=c(2,2))
plot(mod1)
summary(mod1)
library(caper)
data(shorebird)
shorebird <- comparative.data(shorebird.tree, shorebird.data, Species, vcv=TRUE, vcv.dim=3)
mod <- pgls(log(Egg.Mass) ~ log(F.Mass), shorebird, lambda='ML')
summary(mod)
plot(mod)
installed.packages()
help(ln)
sqrt(2)
sqrt(1-2*0.1)
-0.5*log((1-2*0.16-0.1)sqrt(1-2*0.1))
-0.5*log((1-2*0.16-0.1)sqrt(1-2*0.1)
log(2)
log(1-2*0.16-0.1)
-0.5*log((1-2*0.16-0.1)*sqrt(1-2*0.1)
)
sessionInfo()
library("tidyverse")
sessionInfo()
help("sessionInfo")
iris
View(iris)
help(iris)
help(head)
hist(iris$Sepal.Width)
iris$Sepal.Width
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
reg <- lm(formula = Petal.Length ~ Sepal.Length,
data = iris)
abline(reg, col = "red")
## Allele frequencies
n <- 10  # no. individuals
y <- ((6 * 2) + 1) / (n * 2)  # yellow
b <- ((3 * 2) + 1) / (n * 2)  # blue
## Heterozygosity
Ho <- 1 / n
He <- 2 * y * b
## Fixation index
Fis = (He - Ho) / He
## Expected genotype frequencies
yy_e <- y ^ 2
yb_e <- 2 * y * b
bb_e <- b ^ 2
## Prepare data frame
dat <- data.frame(row.names = c("YY", "YB", "BB"),
"observed" = c(6, 1, 3),
"expected" = c(yy_e, yb_e, bb_e)
)
dat
## Perform chi-squared test of goodness of fit. What does this mean?
test <- chisq.test(dat$observed, p = dat$expected)
test
pchisq(test$statistic, df = 1, lower.tail = FALSE)
## Prepare data frame
dat <- data.frame(row.names = c("YY", "YB", "BB"),
"observed" = c(12, 2, 6),
"expected" = c(yy_e, yb_e, bb_e)
)
## Perform chi-squared test of goodness of fit. What does this mean?
test <- chisq.test(dat$observed, p = dat$expected)
## Prepare data frame
dat <- data.frame(row.names = c("YY", "YB", "BB"),
"observed" = c(6, 1, 3),
"expected" = c(yy_e, yb_e, bb_e)
)
## Perform chi-squared test of goodness of fit. What does this mean?
test <- chisq.test(dat$observed, p = dat$expected)
dat
## Prepare data frame
dat <- data.frame(row.names = c("yy", "yb", "bb"),
"observed" = c(6, 1, 3),
"expected" = c(yy_e, yb_e, bb_e)
)
dat
Fis
iris
help(lm)
sessionInfo()
### Simple math
3 + 5 / 2
(3 + 5) / 2
### Assigning values to variables
a <- 2   # assign value "2" to variable "a"
a        # recall value
a
b <- a + 5
b
c <- "hello"
c
a + c
### Example data frame (i.e. table)
iris
### Basic R syntax: function(object, parameters)
head(iris)
help(head)   # Getting help with a function
head(iris, n = 5)
### Access specific data in a data frame (here, a column)
iris$Sepal.Width
### Simple plotting example 1: histogram
hist(iris$Sepal.Width)
### Simple plotting example 2: scatter plot
plot(x = iris$Sepal.Length,
y = iris$Petal.Length)
reg <- lm(formula = Petal.Length ~ Sepal.Length,
data = iris)   # fit linear model to data
abline(reg, col = "red") # add linear model (regression line) to plot
install.packages(c("bold", "XML", "rentrez", "seqinr"), dependencies=T)
install.packages("PrimerMiner", repos = NULL, type="source", dependencies=T)
install.packages("PrimerMiner", repos = NULL, type="source", dependencies=T)
library(GenomicOriginsScripts)
### Set working directory to the location of this script
getwd()    # check working directory
### Allele frequencies
n <- 10                        # number of individuals
y <- ((6 * 2) + 1) / (n * 2)   # yellow allele frequency
b <- ((3 * 2) + 1) / (n * 2)   # blue allele frequency
### Expected genotype frequencies
yy_exp <- y ^ 2
yb_exp <- 2 * y * b
bb_exp <- b ^ 2
### Enter data into data frame for test
dat <- data.frame(row.names = c("yy", "yb", "bb"),
"observed" = c(6, 1, 3),
"expected" = c(yy_exp, yb_exp, bb_exp)
)
### Perform Pearson's chi-squared test of goodness of fit
help(chisq.test)
dat
### Enter data into data frame for test
genotypes <- data.frame(row.names = c("yy", "yb", "bb"),
"N_observed" = c(6, 1, 3),
"freq_expected" = c(yy_exp, yb_exp, bb_exp)
)
genotypes
test <- chisq.test(dat$observed, p = dat$expected)
test <- chisq.test(dat$observed, p = dat$expected)
test
pchisq(test$statistic, df = 1, lower.tail = FALSE)   # recalculate p with 1 degree of freedom
### Heterozygosity
H_obs <- 1 / n
H_exp <- 2 * y * b
### Fixation index
F_is = (H_exp - H_obs) / H_exp
### Install and load required R packages
install.packages("adegenet")
install.packages("pegas")
library(adegenet)
library(pegas)
### Read in data from Genepop format file
help(read.genepop)
yellowblue <- read.genepop("../meg23_repo/data/msats/yellowblue.gen", ncode = 1)
yellowblue <- read.genepop("yellowblue.gen", ncode = 1)
setwd("~/Documents/Academia/7_Teaching/06_MarEcoGenetics/meg24")
yellowblue <- read.genepop("yellowblue.gen", ncode = 1)
yellowblue
yellowblue@tab
yellowblue@loc.n.all
yellowblue@all.names
yellowblue <- read.genepop("yellow_blue.gen", ncode = 1)
### Access data in the new genind object
yellowblue
yellowblue@tab
yellowblue@loc.n.all
yellowblue@all.names
### Test for HWE
hw.test(yellowblue)
### Read in data from Genepop format file
barbados <- read.genepop("puella_barbados.gen", ncode = 3)
barbados
## What is the most / least diverse locus in terms of number of alleles?
barbados@loc.n.all   # Number of loci and alleles
barbados@all.names   # Names of alleles for each locus
library(poppr)
### Locus summary using poppr (no. alleles, heterozygosity, evenness)
install.packages("poppr")
install.packages("poppr")
library(genepop)
library(poppr)
library(genepop)
library(adegenet)
library(pegas)
### Read in data from Genepop format file
help(read.genepop)
yellowblue <- read.genepop("yellow_blue.gen", ncode = 1)
### Access data in the new genind object
yellowblue
yellowblue@tab
yellowblue@loc.n.all
yellowblue@all.names
### Test for HWE
hw.test(yellowblue)
### Test for HWE
hw.test(yellowblue)
### Read in data from Genepop format file
barbados <- read.genepop("puella_barbados.gen", ncode = 3)
barbados
library(poppr)
library(genepop)
locus_table(barbados)
### Alternative test for HWE, with result over all alleles
test_HW("data/puella_barbados.txt", outputFile = "HW_barbados.txt")
help(test_HW)
locus_table(barbados)
barbados
hw.test(barbados)
test_HW("data/puella_barbados.txt", outputFile = "HW_barbados.txt")
test_HW("data/puella_barbados.gen", outputFile = "HW_barbados.txt")
test_HW("data/puella_barbados.txt", outputFile = "HW_barbados.txt")
### Read in data from Genepop format file
barbados <- read.genepop("puella_barbados.txt", ncode = 3)
hw.test(caribbean)
hw.test(barbados)
### Read in data from Genepop format file
barbados <- read.genepop("data/puella_barbados.gen", ncode = 3)
test_HW("data/puella_barbados.txt", outputFile = "HW_barbados.txt")
### Load and test all Caribbean populations
caribbean <- read.genepop("data/puella_caribbean.gen", ncode = 3)
hw.test(caribbean)
b <-
### What are the expected genotype frequencies?
yy_exp <- # ...
### Is the population in Hardy-Weinberg equilibrium?
### What is the fixation index?
### ============================================================================
### Exercise 2: Genepop format
### Install and load required R packages
install.packages("adegenet")
install.packages("adegenet")
b <-
### What are the expected genotype frequencies?
yy_exp <-
# ...
### Is the population in Hardy-Weinberg equilibrium?
help(chisq.test)   # This can be tested using
n <- 10                        # number of individuals
y <- ((6 * 2) + 1) / (n * 2)   # frequency of yellow allele
b <-
### What are the expected genotype frequencies?
yy_exp <-
# ...
### Is the population in Hardy-Weinberg equilibrium?
help(chisq.test)   # This can be tested using
b <-
### What are the expected genotype frequencies?
yy_exp <-
# ...
### Is the population in Hardy-Weinberg equilibrium?
help(chisq.test)   # This can be tested using
b <-
### What are the expected genotype frequencies?
yy_exp <-
# ...
### Is the population in Hardy-Weinberg equilibrium?
help(chisq.test)   # This can be tested using
chisq.test()
b <-
### What are the expected genotype frequencies?
yy_exp <-
# ...
### Is the population in Hardy-Weinberg equilibrium?
help(chisq.test)   # This can be tested using
